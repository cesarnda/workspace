\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Programming Assignment 03}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Introduction}{1}{subsection.1.1}}
\newlabel{residue}{{1}{1}{Introduction}{equation.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Number Partition in $O(n \cdot b)$}{1}{subsection.1.2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Algorithm to populate the tableau to check if a sum is possible\relax }}{2}{algocf.1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{isSumPossible}{{1}{2}{Number Partition in $O(n \cdot b)$}{algocf.1}{}}
\newlabel{numberPartitionResidueFormula}{{2}{3}{Number Partition in $O(n \cdot b)$}{equation.1.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Algorithm to populate the tableau to check if a sum is possible in $O(b)$\relax }}{3}{algocf.2}}
\newlabel{isSumPossibleUpdate}{{2}{3}{Number Partition in $O(n \cdot b)$}{algocf.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Algorithm check if a sum is possible in $O(b)$\relax }}{4}{algocf.3}}
\newlabel{checkIfSumIsPossible}{{3}{4}{Number Partition in $O(n \cdot b)$}{algocf.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Karmarkar-Karp Algorithm}{4}{subsection.1.3}}
\newlabel{exampleKK}{{3}{5}{Karmarkar-Karp Algorithm}{equation.1.3}{}}
\newlabel{naiveKK}{{4}{5}{Karmarkar-Karp Algorithm}{equation.1.4}{}}
\newlabel{proposedSolutionForNaiveKK}{{5}{5}{Karmarkar-Karp Algorithm}{equation.1.5}{}}
\newlabel{linearSystemForNaiveKK}{{6}{5}{Karmarkar-Karp Algorithm}{equation.1.6}{}}
\newlabel{stepsToSolveSystemForNaiveKK}{{7}{6}{Karmarkar-Karp Algorithm}{equation.1.7}{}}
\newlabel{exactlyNaiveKK}{{8}{6}{Karmarkar-Karp Algorithm}{equation.1.8}{}}
\newlabel{verifyNaiveKKT1}{{9}{6}{Karmarkar-Karp Algorithm}{equation.1.9}{}}
\newlabel{verifyNaiveKKT2}{{10}{6}{Karmarkar-Karp Algorithm}{equation.1.10}{}}
\newlabel{verifyNaiveKKT3}{{11}{6}{Karmarkar-Karp Algorithm}{equation.1.11}{}}
\newlabel{proofNaiveKK}{{12}{7}{Karmarkar-Karp Algorithm}{equation.1.12}{}}
\newlabel{bestKKLinearSystem}{{13}{7}{Karmarkar-Karp Algorithm}{equation.1.13}{}}
\newlabel{inductiveStepBestKK}{{14}{7}{Karmarkar-Karp Algorithm}{equation.1.14}{}}
\newlabel{generalRecurrenceKK}{{15}{8}{Karmarkar-Karp Algorithm}{equation.1.15}{}}
